"use strict";(self.webpackChunk_aedart_ion_monorepo=self.webpackChunk_aedart_ion_monorepo||[]).push([[3897],{6170:function(s,n,a){a.r(n),a.d(n,{comp:function(){return p},data:function(){return c}});var e=a(641);const t={};var p=(0,a(6262).A)(t,[["render",function(s,n){return(0,e.uX)(),(0,e.CE)("div",null,n[0]||(n[0]=[(0,e.Fv)('<h1 id="inheritance" tabindex="-1"><a class="header-anchor" href="#inheritance"><span>Inheritance</span></a></h1><p>Metadata is automatically inherited by subclasses.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> meta<span class="token punctuation">,</span> getMeta <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aedart/support/meta&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">@<span class="token function">meta</span><span class="token punctuation">(</span><span class="token string">&#39;service_alias&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;locationSearcher&#39;</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">Service</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">CitySearcher</span> <span class="token keyword">extends</span> <span class="token class-name">Service</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token function">getMeta</span><span class="token punctuation">(</span>CitySearcher<span class="token punctuation">,</span> <span class="token string">&#39;service_alias&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// locationSearcher</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="overwrites" tabindex="-1"><a class="header-anchor" href="#overwrites"><span>Overwrites</span></a></h2><p>You can also overwrite the inherited metadata. The subclass that defines the metadata creates its own copy of the inherited metadata. The parent class&#39; metadata remains untouched.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> meta<span class="token punctuation">,</span> getMeta <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aedart/support/meta&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">Service</span> <span class="token punctuation">{</span></span>\n<span class="line">    </span>\n<span class="line">    @<span class="token function">meta</span><span class="token punctuation">(</span><span class="token string">&#39;search.desc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Searches for countries&#39;</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token comment">// ...not shown...</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">CitySearcher</span> <span class="token keyword">extends</span> <span class="token class-name">Service</span> <span class="token punctuation">{</span></span>\n<span class="line"></span>\n<span class="line">    @<span class="token function">meta</span><span class="token punctuation">(</span><span class="token string">&#39;search.desc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Searches for cities&#39;</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token comment">// ...not shown...</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> service <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CitySearcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token function">getMeta</span><span class="token punctuation">(</span>CitySearcher<span class="token punctuation">,</span> <span class="token string">&#39;search.desc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Searches for cities</span></span>\n<span class="line"><span class="token function">getMeta</span><span class="token punctuation">(</span>Service<span class="token punctuation">,</span> <span class="token string">&#39;search.desc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Searches for countries</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',6)]))}]]);const c=JSON.parse('{"path":"/archive/current/packages/support/meta/inheritance.html","title":"Inheritance","lang":"en-GB","frontmatter":{"title":"Inheritance","description":"About metadata inheritance and overwrites.","sidebarDepth":0},"headers":[{"level":2,"title":"Overwrites","slug":"overwrites","link":"#overwrites","children":[]}],"git":{"updatedTime":1709288721000,"contributors":[{"name":"alin","email":"alin@rspsystems.com","commits":1}]},"filePathRelative":"archive/current/packages/support/meta/inheritance.md","lastUpdatedDateFormat":"yyyy-MM-dd HH:mm:ss ZZZZ","lastUpdatedDateOptions":{}}')}}]);