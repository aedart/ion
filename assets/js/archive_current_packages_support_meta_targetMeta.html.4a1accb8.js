"use strict";(self.webpackChunk_aedart_ion_monorepo=self.webpackChunk_aedart_ion_monorepo||[]).push([[5465],{4378:function(n,s,a){a.r(s),a.d(s,{comp:function(){return i},data:function(){return o}});var e=a(641);const t={id:"target-meta",tabindex:"-1"},p={class:"header-anchor",href:"#target-meta"},c={class:"table-of-contents"},l={};var i=(0,a(6262).A)(l,[["render",function(n,s){const a=(0,e.g2)("Badge"),l=(0,e.g2)("router-link"),i=(0,e.g2)("RouteLink");return(0,e.uX)(),(0,e.CE)("div",null,[(0,e.Lk)("h1",t,[(0,e.Lk)("a",p,[(0,e.Lk)("span",null,[s[0]||(s[0]=(0,e.eW)("Target Meta ")),(0,e.bF)(a,{type:"tip",text:"Available since v0.7",vertical:"middle"})])])]),s[11]||(s[11]=(0,e.Lk)("p",null,[(0,e.eW)("The "),(0,e.Lk)("code",null,"targetMeta()"),(0,e.eW)(" decorator offers the ability to associate metadata directly with a class instance or class method reference. This can be useful in situations when you do not know the class that owns the metadata.")],-1)),s[12]||(s[12]=(0,e.Lk)("p",null,[(0,e.eW)("Behind the scene, "),(0,e.Lk)("code",null,"targetMeta()"),(0,e.eW)(" uses the "),(0,e.Lk)("code",null,"meta()"),(0,e.eW)(" decorator and stores a reference to the target that is decorated inside a "),(0,e.Lk)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",target:"_blank",rel:"noopener noreferrer"},[(0,e.Lk)("code",null,"WeakMap")]),(0,e.eW)(".")],-1)),(0,e.Lk)("nav",c,[(0,e.Lk)("ul",null,[(0,e.Lk)("li",null,[(0,e.bF)(l,{to:"#supported-elements"},{default:(0,e.k6)((()=>s[1]||(s[1]=[(0,e.eW)("Supported Elements")]))),_:1})]),(0,e.Lk)("li",null,[(0,e.bF)(l,{to:"#class-instance"},{default:(0,e.k6)((()=>s[2]||(s[2]=[(0,e.eW)("Class Instance")]))),_:1})]),(0,e.Lk)("li",null,[(0,e.bF)(l,{to:"#method-reference"},{default:(0,e.k6)((()=>s[3]||(s[3]=[(0,e.eW)("Method Reference")]))),_:1})]),(0,e.Lk)("li",null,[(0,e.bF)(l,{to:"#inheritance"},{default:(0,e.k6)((()=>s[4]||(s[4]=[(0,e.eW)("Inheritance")]))),_:1}),(0,e.Lk)("ul",null,[(0,e.Lk)("li",null,[(0,e.bF)(l,{to:"#static-methods"},{default:(0,e.k6)((()=>s[5]||(s[5]=[(0,e.eW)("Static Methods")]))),_:1})])])])])]),s[13]||(s[13]=(0,e.Lk)("h2",{id:"supported-elements",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#supported-elements"},[(0,e.Lk)("span",null,"Supported Elements")])],-1)),(0,e.Lk)("p",null,[s[7]||(s[7]=(0,e.eW)("Unlike the ")),(0,e.bF)(i,{to:"/archive/current/packages/support/meta/supported.html"},{default:(0,e.k6)((()=>s[6]||(s[6]=[(0,e.Lk)("code",null,"meta()",-1),(0,e.eW)(" decorator")]))),_:1}),s[8]||(s[8]=(0,e.eW)(", ")),s[9]||(s[9]=(0,e.Lk)("code",null,"targetMeta()",-1)),s[10]||(s[10]=(0,e.eW)(" only supports the following elements:"))]),s[14]||(s[14]=(0,e.Fv)('<ul><li><code>class</code></li><li><code>method</code></li></ul><h2 id="class-instance" tabindex="-1"><a class="header-anchor" href="#class-instance"><span>Class Instance</span></a></h2><p>The following shows how to define target meta for a class and retrieve it.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> targetMeta<span class="token punctuation">,</span> getTargetMeta <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aedart/support/meta&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">@<span class="token function">targetMeta</span><span class="token punctuation">(</span><span class="token string">&#39;description&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;Search Service&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token string">&#39;Location Sercher&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">LocationSearcherService</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LocationSearcherService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// ...later in your application...</span></span>\n<span class="line"><span class="token function">getTargetMeta</span><span class="token punctuation">(</span>instance<span class="token punctuation">,</span> <span class="token string">&#39;description&#39;</span><span class="token punctuation">)</span><span class="token operator">?.</span>type<span class="token punctuation">;</span> <span class="token comment">// Search Service</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="method-reference" tabindex="-1"><a class="header-anchor" href="#method-reference"><span>Method Reference</span></a></h2><p>The following shows how to define target meta for a class method and retrieve it.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> targetMeta<span class="token punctuation">,</span> getTargetMeta <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aedart/support/meta&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">LocationSearcherService</span> <span class="token punctuation">{</span></span>\n<span class="line"></span>\n<span class="line">    @<span class="token function">targetMeta</span><span class="token punctuation">(</span><span class="token string">&#39;dependencies&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> <span class="token string">&#39;httpClient&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">)</span>    </span>\n<span class="line">    <span class="token function">search</span><span class="token punctuation">(</span><span class="token parameter">apiClient</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LocationSearcherService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// ...later in your application...</span></span>\n<span class="line"><span class="token function">getTargetMeta</span><span class="token punctuation">(</span>instance<span class="token punctuation">.</span>search<span class="token punctuation">,</span> <span class="token string">&#39;dependencies&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ &#39;httpClient&#39; ]</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="inheritance" tabindex="-1"><a class="header-anchor" href="#inheritance"><span>Inheritance</span></a></h2><p>Target meta is automatically inherited by subclasses and can also be overwritten, similar to that of the <a href="#inheritance"><code>meta()</code> decorator</a>.</p><p><strong>Example: classes</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span>targetMeta<span class="token punctuation">,</span> getTargetMeta<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aedart/support/meta&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">@<span class="token function">meta</span><span class="token punctuation">(</span><span class="token string">&#39;service_alias&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;locationSearcher&#39;</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">Service</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">CitySearcher</span> <span class="token keyword">extends</span> <span class="token class-name">Service</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CitySearcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// ...later in your application...</span></span>\n<span class="line"><span class="token function">getTargetMeta</span><span class="token punctuation">(</span>instance<span class="token punctuation">,</span> <span class="token string">&#39;service_alias&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// locationSearcher</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Example: methods</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span>targetMeta<span class="token punctuation">,</span> getTargetMeta<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aedart/support/meta&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">Service</span> <span class="token punctuation">{</span></span>\n<span class="line"></span>\n<span class="line">    @<span class="token function">targetMeta</span><span class="token punctuation">(</span><span class="token string">&#39;dependencies&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> <span class="token string">&#39;countrySearchApiClient&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token function">search</span><span class="token punctuation">(</span><span class="token parameter">apiClient</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token comment">// ...not shown...</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">CountrySearcher</span> <span class="token keyword">extends</span> <span class="token class-name">Service</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token comment">// ... not method overwrite here...</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">CitySearcher</span> <span class="token keyword">extends</span> <span class="token class-name">Service</span> <span class="token punctuation">{</span></span>\n<span class="line"></span>\n<span class="line">    @<span class="token function">targetMeta</span><span class="token punctuation">(</span><span class="token string">&#39;dependencies&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> <span class="token string">&#39;citySearchApiClient&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token function">search</span><span class="token punctuation">(</span><span class="token parameter">apiClient</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token comment">// ...not shown...</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> instanceA <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Service</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> instanceB <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountrySearcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> instanceC <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CitySearcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// ...later in your application...</span></span>\n<span class="line"><span class="token function">getTargetMeta</span><span class="token punctuation">(</span>instanceA<span class="token punctuation">.</span>search<span class="token punctuation">,</span> <span class="token string">&#39;dependencies&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ &#39;countrySearchApiClient&#39; ]</span></span>\n<span class="line"><span class="token function">getTargetMeta</span><span class="token punctuation">(</span>instanceB<span class="token punctuation">.</span>search<span class="token punctuation">,</span> <span class="token string">&#39;dependencies&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ &#39;countrySearchApiClient&#39; ]</span></span>\n<span class="line"><span class="token function">getTargetMeta</span><span class="token punctuation">(</span>instanceC<span class="token punctuation">.</span>search<span class="token punctuation">,</span> <span class="token string">&#39;dependencies&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ &#39;citySearchApiClient&#39; ]</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="static-methods" tabindex="-1"><a class="header-anchor" href="#static-methods"><span>Static Methods</span></a></h3><p>Inheritance for static methods works a bit differently. By default, any subclass will automatically inherit target metadata, even for static methods. However, if you overwrite the given static method, the metadata is lost.</p><div class="hint-container tip"><p class="hint-container-title">Limitation</p><p><em>When a static method is overwritten, the parent&#39;s &quot;target&quot; metadata cannot be obtained due to a general limitation of the <code>meta()</code> decorator. The decorator has no late <code>this</code> binding available to the overwritten static method. This makes it impossible to associate the overwritten static method with metadata from the parent.</em></p></div><p><strong>Example: inheritance for static methods</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span>targetMeta<span class="token punctuation">,</span> getTargetMeta<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aedart/support/meta&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">Service</span> <span class="token punctuation">{</span></span>\n<span class="line"></span>\n<span class="line">    @<span class="token function">targetMeta</span><span class="token punctuation">(</span><span class="token string">&#39;dependencies&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> <span class="token string">&#39;xmlClient&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token keyword">static</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token parameter">client</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token comment">// ...not shown...</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">CountrySearcher</span> <span class="token keyword">extends</span> <span class="token class-name">Service</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token comment">// ... not method overwrite here...</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">CitySearcher</span> <span class="token keyword">extends</span> <span class="token class-name">Service</span> <span class="token punctuation">{</span></span>\n<span class="line">    </span>\n<span class="line">    <span class="token comment">// Overwite of static method - target meta is lost</span></span>\n<span class="line">    <span class="token keyword">static</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token parameter">client</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// ...later in your application...</span></span>\n<span class="line"><span class="token function">getTargetMeta</span><span class="token punctuation">(</span>CountrySearcher<span class="token punctuation">.</span>search<span class="token punctuation">,</span> <span class="token string">&#39;dependencies&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ &#39;xmlClient&#39; ]</span></span>\n<span class="line"><span class="token function">getTargetMeta</span><span class="token punctuation">(</span>CitySearcher<span class="token punctuation">.</span>search<span class="token punctuation">,</span> <span class="token string">&#39;dependencies&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To overcome the above shown issue, you can use the <code>inheritTargetMeta()</code> decorator. It forces the static method to &quot;copy&quot; metadata from its parent, if available.</p><p><strong>Example: force inheritance for static methods</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span></span>\n<span class="line">    targetMeta<span class="token punctuation">,</span></span>\n<span class="line">    getTargetMeta<span class="token punctuation">,</span></span>\n<span class="line">    inheritTargetMeta</span>\n<span class="line"><span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aedart/support/meta&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">Service</span> <span class="token punctuation">{</span></span>\n<span class="line"></span>\n<span class="line">    @<span class="token function">targetMeta</span><span class="token punctuation">(</span><span class="token string">&#39;dependencies&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> <span class="token string">&#39;xmlClient&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token keyword">static</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token parameter">client</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token comment">// ...not shown...</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">CountrySearcher</span> <span class="token keyword">extends</span> <span class="token class-name">Service</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token comment">// ... not method overwrite here...</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">CitySearcher</span> <span class="token keyword">extends</span> <span class="token class-name">Service</span> <span class="token punctuation">{</span></span>\n<span class="line">    </span>\n<span class="line">    @<span class="token function">inheritTargetMeta</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token keyword">static</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token parameter">client</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// ...later in your application...</span></span>\n<span class="line"><span class="token function">getTargetMeta</span><span class="token punctuation">(</span>CountrySearcher<span class="token punctuation">.</span>search<span class="token punctuation">,</span> <span class="token string">&#39;dependencies&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ &#39;xmlClient&#39; ]</span></span>\n<span class="line"><span class="token function">getTargetMeta</span><span class="token punctuation">(</span>CitySearcher<span class="token punctuation">.</span>search<span class="token punctuation">,</span> <span class="token string">&#39;dependencies&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ &#39;xmlClient&#39; ]</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',21))])}]]);const o=JSON.parse('{"path":"/archive/current/packages/support/meta/targetMeta.html","title":"Target Meta","lang":"en-GB","frontmatter":{"title":"Target Meta","description":"Associate metadata with a class instance or class method reference.","sidebarDepth":0},"headers":[{"level":2,"title":"Supported Elements","slug":"supported-elements","link":"#supported-elements","children":[]},{"level":2,"title":"Class Instance","slug":"class-instance","link":"#class-instance","children":[]},{"level":2,"title":"Method Reference","slug":"method-reference","link":"#method-reference","children":[]},{"level":2,"title":"Inheritance","slug":"inheritance","link":"#inheritance","children":[{"level":3,"title":"Static Methods","slug":"static-methods","link":"#static-methods","children":[]}]}],"git":{"updatedTime":1709288721000,"contributors":[{"name":"alin","email":"alin@rspsystems.com","commits":1}]},"filePathRelative":"archive/current/packages/support/meta/targetMeta.md","lastUpdatedDateFormat":"yyyy-MM-dd HH:mm:ss ZZZZ","lastUpdatedDateOptions":{}}')}}]);