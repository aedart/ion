"use strict";(self.webpackChunk_aedart_ion_monorepo=self.webpackChunk_aedart_ion_monorepo||[]).push([[4778],{9628:function(n,s,a){a.r(s),a.d(s,{comp:function(){return i},data:function(){return l}});var e=a(641);const t={class:"hint-container tip"},p={};var i=(0,a(6262).A)(p,[["render",function(n,s){const a=(0,e.g2)("RouteLink");return(0,e.uX)(),(0,e.CE)("div",null,[s[9]||(s[9]=(0,e.Lk)("h1",{id:"dependencies",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#dependencies"},[(0,e.Lk)("span",null,"Dependencies")])],-1)),(0,e.Lk)("p",null,[s[1]||(s[1]=(0,e.eW)("In order for the Service Container to be able to automatically inject dependencies, when ")),(0,e.bF)(a,{to:"/archive/current/packages/container/resolving.html"},{default:(0,e.k6)((()=>s[0]||(s[0]=[(0,e.eW)("resolving")]))),_:1}),s[2]||(s[2]=(0,e.eW)(" components, you must first define them on a target class. The ")),s[3]||(s[3]=(0,e.Lk)("code",null,"dependencies()",-1)),s[4]||(s[4]=(0,e.eW)(" decorator is used for this purpose."))]),s[10]||(s[10]=(0,e.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> dependencies <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@aedart/support/container&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">@<span class="token function">dependencies</span><span class="token punctuation">(</span><span class="token string">&#39;engine&#39;</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">Car</span></span>\n<span class="line"><span class="token punctuation">{</span></span>\n<span class="line">    engine <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span></span>\n<span class="line">    </span>\n<span class="line">    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">engine</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>engine <span class="token operator">=</span> engine<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1)),(0,e.Lk)("div",t,[s[8]||(s[8]=(0,e.Fv)('<p class="hint-container-title">No automatic injection</p><p>The <code>dependencies()</code> decorator <em><strong>does not automatically inject</strong></em> anything into your class. It will only associate binding identifiers with the target class, as <a href="../support/meta">metadata</a>. This means that you can instantiate a new instance of the class, without any side effects (<em>dependencies must be manually given as arguments to the target class</em>).</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> car <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>car<span class="token punctuation">.</span>engine<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>',3)),(0,e.Lk)("p",null,[s[6]||(s[6]=(0,e.eW)("The Service Container's ")),(0,e.bF)(a,{to:"/archive/current/packages/container/resolving.html#the-make-method"},{default:(0,e.k6)((()=>s[5]||(s[5]=[(0,e.Lk)("code",null,"make()",-1),(0,e.eW)(" method")]))),_:1}),s[7]||(s[7]=(0,e.eW)(" is responsible for reading the defined dependencies, resolve them, and inject them into the target class."))])]),s[11]||(s[11]=(0,e.Fv)('<h2 id="multiple-dependencies" tabindex="-1"><a class="header-anchor" href="#multiple-dependencies"><span>Multiple Dependencies</span></a></h2><p>The <code>dependencies()</code> decorator accepts an arbitrary amount of binding identifiers. This allows you to define multiple dependencies in a single call.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">@<span class="token function">dependencies</span><span class="token punctuation">(</span></span>\n<span class="line">    <span class="token string">&#39;warehouse_manager&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token string">&#39;api_client&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token string">&#39;events&#39;</span></span>\n<span class="line"><span class="token punctuation">)</span></span>\n<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">Warehouse</span></span>\n<span class="line"><span class="token punctuation">{</span></span>\n<span class="line">    manager <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span></span>\n<span class="line">    apiClient <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span></span>\n<span class="line">    eventDispatcher <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span></span>\n<span class="line">    </span>\n<span class="line">    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">manager<span class="token punctuation">,</span> apiClient<span class="token punctuation">,</span> dispatcher</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>manager <span class="token operator">=</span> manager<span class="token punctuation">;</span></span>\n<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>apiClient <span class="token operator">=</span> apiClient<span class="token punctuation">;</span></span>\n<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>eventDispatcher <span class="token operator">=</span> dispatcher<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',3))])}]]);const l=JSON.parse('{"path":"/archive/current/packages/container/dependencies.html","title":"Dependencies","lang":"en-GB","frontmatter":{"description":"How to define dependencies","sidebarDepth":0},"headers":[{"level":2,"title":"Multiple Dependencies","slug":"multiple-dependencies","link":"#multiple-dependencies","children":[]}],"git":{"updatedTime":1712571124000,"contributors":[{"name":"alin","email":"alin@rspsystems.com","commits":2}]},"filePathRelative":"archive/current/packages/container/dependencies.md","lastUpdatedDateFormat":"yyyy-MM-dd HH:mm:ss ZZZZ","lastUpdatedDateOptions":{}}')}}]);