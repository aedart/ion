"use strict";(self.webpackChunk_aedart_ion_monorepo=self.webpackChunk_aedart_ion_monorepo||[]).push([[8980],{9432:function(s,n,a){a.r(n),a.d(n,{comp:function(){return l},data:function(){return i}});var t=a(641);const e={id:"isclassconstructor",tabindex:"-1"},o={class:"header-anchor",href:"#isclassconstructor"},c={class:"hint-container warning"},p={};var l=(0,a(6262).A)(p,[["render",function(s,n){const a=(0,t.g2)("Badge"),p=(0,t.g2)("RouteLink");return(0,t.uX)(),(0,t.CE)("div",null,[(0,t.Lk)("h1",e,[(0,t.Lk)("a",o,[(0,t.Lk)("span",null,[n[0]||(n[0]=(0,t.Lk)("code",null,"isClassConstructor",-1)),n[1]||(n[1]=(0,t.eW)()),(0,t.bF)(a,{type:"tip",text:"Available since v0.7",vertical:"middle"})])])]),n[13]||(n[13]=(0,t.Fv)('<p>The <code>isClassConstructor()</code> is able to determine if a value is a class constructor.</p><div class="hint-container warning"><p class="hint-container-title">Caution</p><p><code>isClassConstructor()</code> will only be able to return <code>true</code> for classes that are defined using the <code>class</code> keyword. See <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes" target="_blank" rel="noopener noreferrer">ES6 classes</a> for additional information.</p></div>',2)),(0,t.Lk)("div",c,[n[9]||(n[9]=(0,t.Lk)("p",{class:"hint-container-title"},"Built-in Classes",-1)),(0,t.Lk)("p",null,[n[3]||(n[3]=(0,t.eW)("This util is ")),n[4]||(n[4]=(0,t.Lk)("strong",null,"NOT",-1)),n[5]||(n[5]=(0,t.eW)(" able to detect ")),n[6]||(n[6]=(0,t.Lk)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects",target:"_blank",rel:"noopener noreferrer"},"built-in classes",-1)),n[7]||(n[7]=(0,t.eW)(". Use ")),(0,t.bF)(p,{to:"/archive/current/packages/support/reflections/isConstructor.html"},{default:(0,t.k6)((()=>n[2]||(n[2]=[(0,t.Lk)("code",null,"isConstructor()",-1)]))),_:1}),n[8]||(n[8]=(0,t.eW)(' if you wish to test for "constructable" functions / classes, including built-in classes.'))])]),n[14]||(n[14]=(0,t.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> isClassConstructor <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@aedart/support/reflections&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token function">isClassConstructor</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>\n<span class="line"><span class="token function">isClassConstructor</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>\n<span class="line"><span class="token function">isClassConstructor</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>\n<span class="line"><span class="token function">isClassConstructor</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>\n<span class="line"><span class="token function">isClassConstructor</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>\n<span class="line"><span class="token function">isClassConstructor</span><span class="token punctuation">(</span>Array<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>\n<span class="line"><span class="token function">isClassConstructor</span><span class="token punctuation">(</span><span class="token constant">A</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span></span>\n<span class="line"><span class="token function">isClassConstructor</span><span class="token punctuation">(</span><span class="token keyword">class</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Acknowledgement</strong></p><p>The source code of the above shown methods is heavily inspired by Denis Pushkarev&#39;s Core-js implementation of the <a href="https://github.com/zloirock/core-js#function-iscallable-isconstructor-" target="_blank" rel="noopener noreferrer">Function.isCallable / Function.isConstructor</a> proposal (<em>License MIT</em>).</p>',3)),(0,t.Lk)("p",null,[n[11]||(n[11]=(0,t.eW)("See also ")),(0,t.bF)(p,{to:"/archive/current/packages/support/reflections/isConstructor.html"},{default:(0,t.k6)((()=>n[10]||(n[10]=[(0,t.Lk)("code",null,"isConstructor()",-1)]))),_:1}),n[12]||(n[12]=(0,t.eW)("."))])])}]]);const i=JSON.parse('{"path":"/archive/current/packages/support/reflections/isClassConstructor.html","title":"Is Class Constructor","lang":"en-GB","frontmatter":{"title":"Is Class Constructor","description":"Determine if value is a class constructor.","sidebarDepth":0},"headers":[],"git":{"updatedTime":1710169596000,"contributors":[{"name":"alin","email":"alin@rspsystems.com","commits":2}]},"filePathRelative":"archive/current/packages/support/reflections/isClassConstructor.md","lastUpdatedDateFormat":"yyyy-MM-dd HH:mm:ss ZZZZ","lastUpdatedDateOptions":{}}')}}]);