"use strict";(self.webpackChunk_aedart_ion_monorepo=self.webpackChunk_aedart_ion_monorepo||[]).push([[8382],{9425:function(n,s,a){a.r(s),a.d(s,{comp:function(){return l},data:function(){return c}});var e=a(641);const p={id:"mixins",tabindex:"-1"},t={class:"header-anchor",href:"#mixins"},i={};var l=(0,a(6262).A)(i,[["render",function(n,s){const a=(0,e.g2)("Badge"),i=(0,e.g2)("RouteLink");return(0,e.uX)(),(0,e.CE)("div",null,[(0,e.Lk)("h1",p,[(0,e.Lk)("a",t,[(0,e.Lk)("span",null,[s[0]||(s[0]=(0,e.eW)("Mixins ")),(0,e.bF)(a,{type:"tip",text:"Available since v0.8",vertical:"middle"})])])]),s[4]||(s[4]=(0,e.Fv)('<p><code>@aedart/support/mixins</code> offers an adaptation of <a href="https://justinfagnani.com/author/justinfagnani/" target="_blank" rel="noopener noreferrer">Justin Fagnani&#39;s</a><a href="https://github.com/justinfagnani/mixwith.js" target="_blank" rel="noopener noreferrer"><code>mixwith.js</code></a> package (<em>originally licensed under <a href="https://github.com/justinfagnani/mixwith.js?tab=Apache-2.0-1-ov-file#readme" target="_blank" rel="noopener noreferrer">Apache License 2.0</a></em>).</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> mix<span class="token punctuation">,</span> Mixin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@aedart/support/mixins&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// Define mixin</span></span>\n<span class="line"><span class="token keyword">const</span> NameMixin <span class="token operator">=</span> <span class="token function">Mixin</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">superclass</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">class</span> <span class="token class-name">extends</span> superclass <span class="token punctuation">{</span></span>\n<span class="line"></span>\n<span class="line">    #name<span class="token punctuation">;</span></span>\n<span class="line">    </span>\n<span class="line">    <span class="token keyword">set</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>#name <span class="token operator">=</span> value<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    </span>\n<span class="line">    <span class="token keyword">get</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#name<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// Apply mixin...</span></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">Item</span> <span class="token keyword">extends</span> <span class="token class-name">mix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span></span>\n<span class="line">    NameMixin</span>\n<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token comment">// ...not shown...    </span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// ...Later in your application</span></span>\n<span class="line"><span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Item</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">item<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;My Item&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// My Item</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',2)),(0,e.Lk)("p",null,[s[2]||(s[2]=(0,e.eW)("See also ")),(0,e.bF)(i,{to:"/archive/current/packages/support/concerns/"},{default:(0,e.k6)((()=>s[1]||(s[1]=[(0,e.eW)("Concerns")]))),_:1}),s[3]||(s[3]=(0,e.eW)(" as an alternative."))])])}]]);const c=JSON.parse('{"path":"/archive/current/packages/support/mixins/","title":"About Mixins","lang":"en-GB","frontmatter":{"title":"About Mixins","description":"Abstract subclasses (\\"Mixins\\") utilities","sidebarDepth":0},"headers":[],"git":{"updatedTime":1709647075000,"contributors":[{"name":"alin","email":"alin@rspsystems.com","commits":2}]},"filePathRelative":"archive/current/packages/support/mixins/README.md","lastUpdatedDateFormat":"yyyy-MM-dd HH:mm:ss ZZZZ","lastUpdatedDateOptions":{}}')}}]);