"use strict";(self.webpackChunk_aedart_ion_monorepo=self.webpackChunk_aedart_ion_monorepo||[]).push([[1095],{2354:function(n,s,a){a.r(s),a.d(s,{comp:function(){return p},data:function(){return l}});var t=a(641);const e={id:"getconstructorname",tabindex:"-1"},o={class:"header-anchor",href:"#getconstructorname"},c={};var p=(0,a(6262).A)(c,[["render",function(n,s){const a=(0,t.g2)("Badge");return(0,t.uX)(),(0,t.CE)("div",null,[(0,t.Lk)("h1",e,[(0,t.Lk)("a",o,[(0,t.Lk)("span",null,[s[0]||(s[0]=(0,t.Lk)("code",null,"getConstructorName",-1)),s[1]||(s[1]=(0,t.eW)()),(0,t.bF)(a,{type:"tip",text:"Available since v0.9",vertical:"middle"})])])]),s[2]||(s[2]=(0,t.Fv)('<p>Returns target class&#39; constructor name, if available.</p><p>It accepts the following arguments:</p><ul><li><code>target: ConstructorOrAbstractConstructor</code> - The target class</li><li><code>defaultValue: string|null = null</code> - (<em>optional</em>) A default string value to return if target has no constructor name.</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> getConstructorName <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aedart/support/reflections&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">Box</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token function">getConstructorName</span><span class="token punctuation">(</span>Box<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Box</span></span>\n<span class="line"><span class="token function">getConstructorName</span><span class="token punctuation">(</span><span class="token keyword">class</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null</span></span>\n<span class="line"><span class="token function">getConstructorName</span><span class="token punctuation">(</span><span class="token keyword">class</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;MyBox&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// MyBox</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',4))])}]]);const l=JSON.parse('{"path":"/archive/current/packages/support/reflections/getConstructorName.html","title":"Get Constructor Name","lang":"en-GB","frontmatter":{"title":"Get Constructor Name","description":"Get name of target class\' constructor","sidebarDepth":0},"headers":[],"git":{"updatedTime":1709548506000,"contributors":[{"name":"alin","email":"alin@rspsystems.com","commits":1}]},"filePathRelative":"archive/current/packages/support/reflections/getConstructorName.md","lastUpdatedDateFormat":"yyyy-MM-dd HH:mm:ss ZZZZ","lastUpdatedDateOptions":{}}')}}]);