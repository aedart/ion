"use strict";(self.webpackChunk_aedart_ion_monorepo=self.webpackChunk_aedart_ion_monorepo||[]).push([[5348],{2978:function(n,s,a){a.r(s),a.d(s,{comp:function(){return o},data:function(){return c}});var e=a(641);const t={id:"uniqueid",tabindex:"-1"},p={class:"header-anchor",href:"#uniqueid"},i={};var o=(0,a(6262).A)(i,[["render",function(n,s){const a=(0,e.g2)("Badge");return(0,e.uX)(),(0,e.CE)("div",null,[(0,e.Lk)("h1",t,[(0,e.Lk)("a",p,[(0,e.Lk)("span",null,[s[0]||(s[0]=(0,e.Lk)("code",null,"uniqueId",-1)),s[1]||(s[1]=(0,e.eW)()),(0,e.bF)(a,{type:"tip",text:"Available since v0.6",vertical:"middle"})])])]),s[2]||(s[2]=(0,e.Fv)('<p>The <code>uniqueId()</code> is able to return a <em>&quot;unique¹&quot;</em> reference identifier for any given object.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> uniqueId<span class="token punctuation">,</span> hasUniqueId <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@aedart/support/objects&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Ursula&#39;</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">uniqueId</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 27</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// ...later in your application</span></span>\n<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">hasUniqueId</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span></span>\n<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">uniqueId</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 27</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The source code is heavily inspired by <a href="https://github.com/ngehlert" target="_blank" rel="noopener noreferrer">Nicolas Gehlert&#39;s</a> blog post: <a href="https://developapa.com/object-ids/" target="_blank" rel="noopener noreferrer">&quot;<em>Get object reference IDs in JavaScript/TypeScript</em>&quot; (September 28, 2022)</a></p><p>¹: <em>In this context, the returned number is unique in the current session. The number will NOT be unique across multiple sessions, nor guarantee that an object will receive the exact same identifier as in a previous session!</em></p>',4))])}]]);const c=JSON.parse('{"path":"/archive/current/packages/support/objects/uniqueId.html","title":"Unique ID","lang":"en-GB","frontmatter":{"title":"Unique ID","description":"Set value in object path.","sidebarDepth":0},"headers":[],"git":{"updatedTime":1709288721000,"contributors":[{"name":"alin","email":"alin@rspsystems.com","commits":1}]},"filePathRelative":"archive/current/packages/support/objects/uniqueId.md","lastUpdatedDateFormat":"yyyy-MM-dd HH:mm:ss ZZZZ","lastUpdatedDateOptions":{}}')}}]);