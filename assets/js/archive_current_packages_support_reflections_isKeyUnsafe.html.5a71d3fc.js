"use strict";(self.webpackChunk_aedart_ion_monorepo=self.webpackChunk_aedart_ion_monorepo||[]).push([[5299],{477:function(s,n,a){a.r(n),a.d(n,{comp:function(){return c},data:function(){return o}});var e=a(641);const t={id:"iskeyunsafe",tabindex:"-1"},p={class:"header-anchor",href:"#iskeyunsafe"},i={};var c=(0,a(6262).A)(i,[["render",function(s,n){const a=(0,e.g2)("Badge");return(0,e.uX)(),(0,e.CE)("div",null,[(0,e.Lk)("h1",t,[(0,e.Lk)("a",p,[(0,e.Lk)("span",null,[n[0]||(n[0]=(0,e.Lk)("code",null,"isKeyUnsafe",-1)),n[1]||(n[1]=(0,e.eW)()),(0,e.bF)(a,{type:"tip",text:"Available since v0.9",vertical:"middle"})])])]),n[2]||(n[2]=(0,e.Fv)('<p>Determines if a property key is considered &quot;unsafe&quot;.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> isKeyUnsafe <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aedart/support/reflections&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token function">isKeyUnsafe</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>\n<span class="line"><span class="token function">isKeyUnsafe</span><span class="token punctuation">(</span><span class="token string">&#39;length&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>\n<span class="line"><span class="token function">isKeyUnsafe</span><span class="token punctuation">(</span><span class="token string">&#39;constructor&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>\n<span class="line"><span class="token function">isKeyUnsafe</span><span class="token punctuation">(</span><span class="token string">&#39;__proto__&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Note</p><p>Behind the scene, the <code>isKeyUnsafe()</code> function matches the given key against values from the predefined <code>DANGEROUS_PROPERTIES</code> list, which is defined in the <code>@aedart/contracts/support/objects</code> submodule;</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">DANGEROUS_PROPERTIES</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@aedart/contracts/support/objects&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div>',3))])}]]);const o=JSON.parse('{"path":"/archive/current/packages/support/reflections/isKeyUnsafe.html","title":"Is Key Unsafe","lang":"en-GB","frontmatter":{"title":"Is Key Unsafe","description":"Determine if a property key is unsafe.","sidebarDepth":0},"headers":[],"git":{"updatedTime":1709548506000,"contributors":[{"name":"alin","email":"alin@rspsystems.com","commits":3}]},"filePathRelative":"archive/current/packages/support/reflections/isKeyUnsafe.md","lastUpdatedDateFormat":"yyyy-MM-dd HH:mm:ss ZZZZ","lastUpdatedDateOptions":{}}')}}]);