"use strict";(self.webpackChunk_aedart_ion_monorepo=self.webpackChunk_aedart_ion_monorepo||[]).push([[4485],{4849:function(n,s,a){a.r(s),a.d(s,{comp:function(){return t},data:function(){return l}});var p=a(641);const e={};var t=(0,a(6262).A)(e,[["render",function(n,s){const a=(0,p.g2)("RouteLink");return(0,p.uX)(),(0,p.CE)("div",null,[s[3]||(s[3]=(0,p.Lk)("h1",{id:"hasall",tabindex:"-1"},[(0,p.Lk)("a",{class:"header-anchor",href:"#hasall"},[(0,p.Lk)("span",null,[(0,p.Lk)("code",null,"hasAll")])])],-1)),s[4]||(s[4]=(0,p.Lk)("p",null,"Determine if all paths are properties of given object.",-1)),(0,p.Lk)("p",null,[(0,p.Lk)("em",null,[s[1]||(s[1]=(0,p.eW)("See also ")),(0,p.bF)(a,{to:"/archive/current/packages/support/objects/isset.html"},{default:(0,p.k6)((()=>s[0]||(s[0]=[(0,p.Lk)("code",null,"isset()",-1)]))),_:1}),s[2]||(s[2]=(0,p.eW)("."))])]),s[5]||(s[5]=(0,p.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> hasAll <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@aedart/support/objects&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> mySymbol <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;my-symbol&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1234</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Sven&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">24</span><span class="token punctuation">,</span></span>\n<span class="line">            <span class="token punctuation">[</span>mySymbol<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token boolean">true</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Jane&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Ashley&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> paths <span class="token operator">=</span> <span class="token punctuation">[</span></span>\n<span class="line">    <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token string">&#39;b.name&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token string">&#39;b.c.age&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token punctuation">[</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> mySymbol<span class="token punctuation">]</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token string">&#39;d[0]&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token string">&#39;d[1].name&#39;</span><span class="token punctuation">,</span></span>\n<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">hasAll</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> paths<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1))])}]]);const l=JSON.parse('{"path":"/archive/current/packages/support/objects/hasAll.html","title":"Has All","lang":"en-GB","frontmatter":{"title":"Has All","description":"Determine if all object paths are properties.","sidebarDepth":0},"headers":[],"git":{"updatedTime":1709288721000,"contributors":[{"name":"alin","email":"alin@rspsystems.com","commits":1}]},"filePathRelative":"archive/current/packages/support/objects/hasAll.md","lastUpdatedDateFormat":"yyyy-MM-dd HH:mm:ss ZZZZ","lastUpdatedDateOptions":{}}')}}]);