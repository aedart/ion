"use strict";(self.webpackChunk_aedart_ion_monorepo=self.webpackChunk_aedart_ion_monorepo||[]).push([[2328],{6738:function(s,n,a){a.r(n),a.d(n,{comp:function(){return r},data:function(){return l}});var e=a(641);const t={class:"table-of-contents"},p={};var r=(0,a(6262).A)(p,[["render",function(s,n){const a=(0,e.g2)("router-link");return(0,e.uX)(),(0,e.CE)("div",null,[n[2]||(n[2]=(0,e.Lk)("h1",{id:"custom-errors",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#custom-errors"},[(0,e.Lk)("span",null,"Custom Errors")])],-1)),(0,e.Lk)("nav",t,[(0,e.Lk)("ul",null,[(0,e.Lk)("li",null,[(0,e.bF)(a,{to:"#abstractclasserror"},{default:(0,e.k6)((()=>n[0]||(n[0]=[(0,e.eW)("AbstractClassError")]))),_:1})]),(0,e.Lk)("li",null,[(0,e.bF)(a,{to:"#logicalerror"},{default:(0,e.k6)((()=>n[1]||(n[1]=[(0,e.eW)("LogicalError")]))),_:1})])])]),n[3]||(n[3]=(0,e.Fv)('<h2 id="abstractclasserror" tabindex="-1"><a class="header-anchor" href="#abstractclasserror"><span><code>AbstractClassError</code></span></a></h2><p>The <code>AbstractClassError</code> is intended to be thrown whenever an abstract class is attempted instantiated directly.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> AbstractClassError <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@aedart/support/exceptions&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token doc-comment comment">/**</span>\n<span class="line"> * <span class="token keyword">@abstract</span></span>\n<span class="line"> */</span></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyAbstractClass</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">.</span>target <span class="token operator">===</span> MyAbstractClass<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AbstractClassError</span><span class="token punctuation">(</span>MyAbstractClass<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyAbstractClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// AbstractClassError</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="logicalerror" tabindex="-1"><a class="header-anchor" href="#logicalerror"><span><code>LogicalError</code></span></a></h2><p>To be thrown whenever there is an error in the programming logic.</p><p><em>Inspired by PHP&#39;s <a href="https://www.php.net/manual/en/class.logicexception" target="_blank" rel="noopener noreferrer"><code>LogicException</code></a></em></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> LogicalError <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@aedart/support/exceptions&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">function</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token parameter">person</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>printer <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">LogicalError</span><span class="token punctuation">(</span><span class="token string">&#39;Printer is missing, unable to print people&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',7))])}]]);const l=JSON.parse('{"path":"/archive/current/packages/support/exceptions/customErrors.html","title":"Custom Errors","lang":"en-GB","frontmatter":{"title":"Custom Errors","description":"Predefined custom errors.","sidebarDepth":0},"headers":[{"level":2,"title":"AbstractClassError","slug":"abstractclasserror","link":"#abstractclasserror","children":[]},{"level":2,"title":"LogicalError","slug":"logicalerror","link":"#logicalerror","children":[]}],"git":{"updatedTime":1709288721000,"contributors":[{"name":"alin","email":"alin@rspsystems.com","commits":1}]},"filePathRelative":"archive/current/packages/support/exceptions/customErrors.md","lastUpdatedDateFormat":"yyyy-MM-dd HH:mm:ss ZZZZ","lastUpdatedDateOptions":{}}')}}]);