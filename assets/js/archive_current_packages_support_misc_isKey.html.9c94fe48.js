"use strict";(self.webpackChunk_aedart_ion_monorepo=self.webpackChunk_aedart_ion_monorepo||[]).push([[6795],{1397:function(n,s,a){a.r(s),a.d(s,{comp:function(){return o},data:function(){return i}});var t=a(641);const e={id:"iskey",tabindex:"-1"},p={class:"header-anchor",href:"#iskey"},c={};var o=(0,a(6262).A)(c,[["render",function(n,s){const a=(0,t.g2)("Badge"),c=(0,t.g2)("RouteLink");return(0,t.uX)(),(0,t.CE)("div",null,[(0,t.Lk)("h1",e,[(0,t.Lk)("a",p,[(0,t.Lk)("span",null,[s[0]||(s[0]=(0,t.Lk)("code",null,"isKey",-1)),s[1]||(s[1]=(0,t.eW)()),(0,t.bF)(a,{type:"tip",text:"Available since v0.7",vertical:"middle"})])])]),(0,t.Lk)("p",null,[s[4]||(s[4]=(0,t.eW)("Determine if given is a valid ")),(0,t.bF)(c,{to:"/archive/current/packages/support/misc/isPropertyKey.html"},{default:(0,t.k6)((()=>s[2]||(s[2]=[(0,t.eW)("key")]))),_:1}),s[5]||(s[5]=(0,t.eW)(" or ")),(0,t.bF)(c,{to:"/archive/current/packages/support/objects/has.html"},{default:(0,t.k6)((()=>s[3]||(s[3]=[(0,t.eW)("property path identifier")]))),_:1}),s[6]||(s[6]=(0,t.eW)("."))]),s[7]||(s[7]=(0,t.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> isKey <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aedart/support/misc&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token function">isKey</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span></span>\n<span class="line"><span class="token function">isKey</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span></span>\n<span class="line"><span class="token function">isKey</span><span class="token punctuation">(</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;my-symbol&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span></span>\n<span class="line"><span class="token function">isKey</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b.c&#39;</span><span class="token punctuation">,</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;my-other-symbol&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span></span>\n<span class="line"></span>\n<span class="line"><span class="token function">isKey</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>\n<span class="line"><span class="token function">isKey</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>\n<span class="line"><span class="token function">isKey</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>\n<span class="line"><span class="token function">isKey</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>\n<span class="line"><span class="token function">isKey</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1))])}]]);const i=JSON.parse('{"path":"/archive/current/packages/support/misc/isKey.html","title":"Is Key","lang":"en-GB","frontmatter":{"title":"Is Key","description":"Determine if is a key or path identifier","sidebarDepth":0},"headers":[],"git":{"updatedTime":1709288721000,"contributors":[{"name":"alin","email":"alin@rspsystems.com","commits":1}]},"filePathRelative":"archive/current/packages/support/misc/isKey.md","lastUpdatedDateFormat":"yyyy-MM-dd HH:mm:ss ZZZZ","lastUpdatedDateOptions":{}}')}}]);