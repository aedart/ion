"use strict";(self.webpackChunk_aedart_ion_monorepo=self.webpackChunk_aedart_ion_monorepo||[]).push([[1236],{8779:function(s,n,a){a.r(n),a.d(n,{comp:function(){return c},data:function(){return i}});var e=a(641);const t={id:"mergekeys",tabindex:"-1"},p={class:"header-anchor",href:"#mergekeys"},o={};var c=(0,a(6262).A)(o,[["render",function(s,n){const a=(0,e.g2)("Badge"),o=(0,e.g2)("RouteLink");return(0,e.uX)(),(0,e.CE)("div",null,[(0,e.Lk)("h1",t,[(0,e.Lk)("a",p,[(0,e.Lk)("span",null,[n[0]||(n[0]=(0,e.Lk)("code",null,"mergeKeys",-1)),n[1]||(n[1]=(0,e.eW)()),(0,e.bF)(a,{type:"tip",text:"Available since v0.7",vertical:"middle"})])])]),(0,e.Lk)("p",null,[n[4]||(n[4]=(0,e.eW)("The ")),n[5]||(n[5]=(0,e.Lk)("code",null,"mergeKeys()",-1)),n[6]||(n[6]=(0,e.eW)(" method is able to merge two or more keys into a single key (")),(0,e.Lk)("em",null,[n[3]||(n[3]=(0,e.eW)("see ")),(0,e.bF)(o,{to:"/archive/current/packages/support/misc/isKey.html"},{default:(0,e.k6)((()=>n[2]||(n[2]=[(0,e.Lk)("code",null,"isKey()",-1)]))),_:1})]),n[7]||(n[7]=(0,e.eW)(")."))]),n[8]||(n[8]=(0,e.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> mergeKeys <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@aedart/support/misc&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token function">mergeKeys</span><span class="token punctuation">(</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;my-symbol&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c.d&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ Symbol(&#39;my-symbol&#39;), &#39;b&#39;, &#39;c.d&#39;, 23 ];</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1))])}]]);const i=JSON.parse('{"path":"/archive/current/packages/support/misc/mergeKeys.html","title":"Merge Keys","lang":"en-GB","frontmatter":{"title":"Merge Keys","description":"Merge keys into a single key.","sidebarDepth":0},"headers":[],"git":{"updatedTime":1709288721000,"contributors":[{"name":"alin","email":"alin@rspsystems.com","commits":1}]},"filePathRelative":"archive/current/packages/support/misc/mergeKeys.md","lastUpdatedDateFormat":"yyyy-MM-dd HH:mm:ss ZZZZ","lastUpdatedDateOptions":{}}')}}]);