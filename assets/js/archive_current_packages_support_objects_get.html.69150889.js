"use strict";(self.webpackChunk_aedart_ion_monorepo=self.webpackChunk_aedart_ion_monorepo||[]).push([[8068],{281:function(n,s,a){a.r(s),a.d(s,{comp:function(){return t},data:function(){return l}});var e=a(641);const p={};var t=(0,a(6262).A)(p,[["render",function(n,s){const a=(0,e.g2)("RouteLink");return(0,e.uX)(),(0,e.CE)("div",null,[s[3]||(s[3]=(0,e.Lk)("h1",{id:"get",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#get"},[(0,e.Lk)("span",null,[(0,e.Lk)("code",null,"get")])])],-1)),s[4]||(s[4]=(0,e.Lk)("p",null,[(0,e.eW)("Get value in object at given path. "),(0,e.Lk)("em",null,[(0,e.eW)("Method is an alias for "),(0,e.Lk)("a",{href:"https://lodash.com/docs/4.17.15#get",target:"_blank",rel:"noopener noreferrer"},[(0,e.eW)("Lodash "),(0,e.Lk)("code",null,"get")]),(0,e.eW)(".")])],-1)),(0,e.Lk)("p",null,[(0,e.Lk)("em",null,[s[1]||(s[1]=(0,e.eW)("See also ")),(0,e.bF)(a,{to:"/archive/current/packages/support/objects/set.html"},{default:(0,e.k6)((()=>s[0]||(s[0]=[(0,e.Lk)("code",null,"set()",-1)]))),_:1}),s[2]||(s[2]=(0,e.eW)("."))])]),s[5]||(s[5]=(0,e.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> get <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@aedart/support/objects&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1234</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">24</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&#39;b.c.age&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 24</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="default-value" tabindex="-1"><a class="header-anchor" href="#default-value"><span>Default Value</span></a></h2><p>You can also specify a default value to be returned, if the resolved value is <code>undefined</code>.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1234</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token keyword">undefined</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// Returns default value...</span></span>\n<span class="line"><span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&#39;b.c.age&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 20</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',4))])}]]);const l=JSON.parse('{"path":"/archive/current/packages/support/objects/get.html","title":"Get","lang":"en-GB","frontmatter":{"title":"Get","description":"Get object value from given path.","sidebarDepth":0},"headers":[{"level":2,"title":"Default Value","slug":"default-value","link":"#default-value","children":[]}],"git":{"updatedTime":1709288721000,"contributors":[{"name":"alin","email":"alin@rspsystems.com","commits":1}]},"filePathRelative":"archive/current/packages/support/objects/get.md","lastUpdatedDateFormat":"yyyy-MM-dd HH:mm:ss ZZZZ","lastUpdatedDateOptions":{}}')}}]);