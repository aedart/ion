"use strict";(self.webpackChunk_aedart_ion_monorepo=self.webpackChunk_aedart_ion_monorepo||[]).push([[6296],{1176:function(s,n,a){a.r(n),a.d(n,{comp:function(){return t},data:function(){return l}});var e=a(641);const p={};var t=(0,a(6262).A)(p,[["render",function(s,n){return(0,e.uX)(),(0,e.CE)("div",null,n[0]||(n[0]=[(0,e.Fv)('<h1 id="hasany" tabindex="-1"><a class="header-anchor" href="#hasany"><span><code>hasAny</code></span></a></h1><p>Determine if any paths are properties of given object.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> hasAny <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@aedart/support/objects&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1234</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Sven&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">24</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> paths <span class="token operator">=</span> <span class="token punctuation">[</span></span>\n<span class="line">    <span class="token string">&#39;z&#39;</span><span class="token punctuation">,</span> <span class="token comment">// does not exist</span></span>\n<span class="line">    <span class="token string">&#39;b.c.name&#39;</span><span class="token punctuation">,</span> <span class="token comment">// does not exist</span></span>\n<span class="line">    <span class="token string">&#39;b.c.age&#39;</span><span class="token punctuation">,</span> <span class="token comment">// exist</span></span>\n<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">hasAny</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> paths<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',3)]))}]]);const l=JSON.parse('{"path":"/archive/current/packages/support/objects/hasAny.html","title":"Has Any","lang":"en-GB","frontmatter":{"title":"Has Any","description":"Determine if any object paths are properties.","sidebarDepth":0},"headers":[],"git":{"updatedTime":1709288721000,"contributors":[{"name":"alin","email":"alin@rspsystems.com","commits":1}]},"filePathRelative":"archive/current/packages/support/objects/hasAny.md","lastUpdatedDateFormat":"yyyy-MM-dd HH:mm:ss ZZZZ","lastUpdatedDateOptions":{}}')}}]);