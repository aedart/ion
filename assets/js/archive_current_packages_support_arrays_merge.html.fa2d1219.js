"use strict";(self.webpackChunk_aedart_ion_monorepo=self.webpackChunk_aedart_ion_monorepo||[]).push([[5674],{9411:function(n,s,a){a.r(s),a.d(s,{comp:function(){return l},data:function(){return i}});var e=a(641);const t={class:"table-of-contents"},p={id:"merge-options",tabindex:"-1"},o={class:"header-anchor",href:"#merge-options"},c={};var l=(0,a(6262).A)(c,[["render",function(n,s){const a=(0,e.g2)("router-link"),c=(0,e.g2)("Badge");return(0,e.uX)(),(0,e.CE)("div",null,[s[6]||(s[6]=(0,e.Lk)("h1",{id:"merge",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#merge"},[(0,e.Lk)("span",null,[(0,e.Lk)("code",null,"merge")])])],-1)),(0,e.Lk)("nav",t,[(0,e.Lk)("ul",null,[(0,e.Lk)("li",null,[(0,e.bF)(a,{to:"#deep-copy-objects"},{default:(0,e.k6)((()=>s[0]||(s[0]=[(0,e.eW)("Deep Copy Objects")]))),_:1})]),(0,e.Lk)("li",null,[(0,e.bF)(a,{to:"#when-unable-to-merge-values"},{default:(0,e.k6)((()=>s[1]||(s[1]=[(0,e.eW)("When unable to merge values")]))),_:1})]),(0,e.Lk)("li",null,[(0,e.bF)(a,{to:"#merge-options"},{default:(0,e.k6)((()=>[s[2]||(s[2]=(0,e.eW)("Merge Options ")),(0,e.bF)(c,{type:"tip",text:"Available since v0.11",vertical:"middle"})])),_:1}),(0,e.Lk)("ul",null,[(0,e.Lk)("li",null,[(0,e.bF)(a,{to:"#transferfunctions"},{default:(0,e.k6)((()=>s[3]||(s[3]=[(0,e.eW)("transferFunctions")]))),_:1})]),(0,e.Lk)("li",null,[(0,e.bF)(a,{to:"#callback"},{default:(0,e.k6)((()=>s[4]||(s[4]=[(0,e.eW)("callback")]))),_:1})])])])])]),s[7]||(s[7]=(0,e.Fv)('<p>Merges arrays into a new array. This function attempts to deep copy values, using <a href="https://developer.mozilla.org/en-US/docs/Web/API/structuredClone" target="_blank" rel="noopener noreferrer"><code>structuredClone</code></a>.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> merge <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aedart/support/arrays&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token function">merge</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="deep-copy-objects" tabindex="-1"><a class="header-anchor" href="#deep-copy-objects"><span>Deep Copy Objects</span></a></h2><p>Simple (<em>or &quot;plain&quot;</em>) objects are <a href="https://developer.mozilla.org/en-US/docs/Glossary/Deep_copy" target="_blank" rel="noopener noreferrer">deep copied</a>. This means that new objects are returned in the resulting array.</p><p>See <a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm" target="_blank" rel="noopener noreferrer">Mozilla&#39;s documentation</a> for additional information about what data types are supported.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">ping</span><span class="token operator">:</span> <span class="token string">&#39;pong&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">[</span> a <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> b<span class="token punctuation">,</span> c <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>\n<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>\n<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">===</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="when-unable-to-merge-values" tabindex="-1"><a class="header-anchor" href="#when-unable-to-merge-values"><span>When unable to merge values</span></a></h2><p>In situations when values cannot be copied via <code>structuredClone</code>, an <code>ArrayMergeError</code> is thrown.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// A function cannot be deep copied...</span></span>\n<span class="line"></span>\n<span class="line"><span class="token function">merge</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ArrayMergeError</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>See <a href="#merge-options">merge options</a> for details on how to deal with functions.</em></p>',10)),(0,e.Lk)("h2",p,[(0,e.Lk)("a",o,[(0,e.Lk)("span",null,[s[5]||(s[5]=(0,e.eW)("Merge Options ")),(0,e.bF)(c,{type:"tip",text:"Available since v0.11",vertical:"middle"})])])]),s[8]||(s[8]=(0,e.Fv)('<p><code>merge()</code> supports a number of options. To specify thom, use the <code>using()</code> method.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token punctuation">.</span><span class="token function">using</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token doc-comment comment">/** option: value */</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>arrayA<span class="token punctuation">,</span> arrayB<span class="token punctuation">,</span> arrayC<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Note</p><p>When invoking <code>merge()</code> without any arguments, an underlying array <code>Merger</code> instance is returned.</p></div><h3 id="transferfunctions" tabindex="-1"><a class="header-anchor" href="#transferfunctions"><span><code>transferFunctions</code></span></a></h3><p>By default, functions are not transferred (<em>not copied</em>). When encountered an <code>ArrayMergeError</code> is thrown, because the underlying <a href="https://developer.mozilla.org/en-US/docs/Web/API/structuredClone" target="_blank" rel="noopener noreferrer"><code>structuredClone</code></a> is not able to duplicate functions. To change this behaviour, you can set the <code>transferFunctions</code> setting to <code>true</code>. Function are then &quot;transferred&quot; into the resulting array.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">bar</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token punctuation">.</span><span class="token function">using</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">transferFunctions</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token punctuation">[</span> foo <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> bar <span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// [ foo, bar ]</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="callback" tabindex="-1"><a class="header-anchor" href="#callback"><span><code>callback</code></span></a></h3><p>If you require more advanced duplication logic of the array values, then you can specify a callback that can process and return the value in question.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token punctuation">.</span><span class="token function">using</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>\n<span class="line">        <span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> index<span class="token punctuation">,</span> array<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token keyword">return</span> element <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ 2, 4, 6, 8 ]</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="arguments" tabindex="-1"><a class="header-anchor" href="#arguments"><span>Arguments</span></a></h4><ul><li><code>element: any</code> - The current element being processed in the array.</li><li><code>index: number</code> - The index of the current element being processed in the array.</li><li><code>array: any[]</code> - The concatenated array this callback was called upon.</li><li><code>options: Readonly&lt;ArrayMergeOptions&gt;</code> - The merge options to be applied.</li></ul>',11))])}]]);const i=JSON.parse('{"path":"/archive/current/packages/support/arrays/merge.html","title":"Merge","lang":"en-GB","frontmatter":{"title":"Merge","description":"Merge multiple arrays into a new array.","sidebarDepth":0},"headers":[{"level":2,"title":"Deep Copy Objects","slug":"deep-copy-objects","link":"#deep-copy-objects","children":[]},{"level":2,"title":"When unable to merge values","slug":"when-unable-to-merge-values","link":"#when-unable-to-merge-values","children":[]},{"level":2,"title":"Merge Options","slug":"merge-options","link":"#merge-options","children":[{"level":3,"title":"transferFunctions","slug":"transferfunctions","link":"#transferfunctions","children":[]},{"level":3,"title":"callback","slug":"callback","link":"#callback","children":[]}]}],"git":{"updatedTime":1712043873000,"contributors":[{"name":"alin","email":"alin@rspsystems.com","commits":3}]},"filePathRelative":"archive/current/packages/support/arrays/merge.md","lastUpdatedDateFormat":"yyyy-MM-dd HH:mm:ss ZZZZ","lastUpdatedDateOptions":{}}')}}]);