"use strict";(self.webpackChunk_aedart_ion_monorepo=self.webpackChunk_aedart_ion_monorepo||[]).push([[3700],{2895:function(n,s,a){a.r(s),a.d(s,{comp:function(){return e},data:function(){return o}});var t=a(641);const p={};var e=(0,a(6262).A)(p,[["render",function(n,s){const a=(0,t.g2)("RouteLink");return(0,t.uX)(),(0,t.CE)("div",null,[s[10]||(s[10]=(0,t.Lk)("h1",{id:"isset",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#isset"},[(0,t.Lk)("span",null,[(0,t.Lk)("code",null,"isset")])])],-1)),(0,t.Lk)("p",null,[s[1]||(s[1]=(0,t.eW)("Determine if paths are properties of given object and have values. This method differs from ")),(0,t.bF)(a,{to:"/archive/current/packages/support/objects/has.html"},{default:(0,t.k6)((()=>s[0]||(s[0]=[(0,t.Lk)("code",null,"has()",-1)]))),_:1}),s[2]||(s[2]=(0,t.eW)(", in that it only returns true if properties' values are not ")),s[3]||(s[3]=(0,t.Lk)("code",null,"undefined",-1)),s[4]||(s[4]=(0,t.eW)(" and not ")),s[5]||(s[5]=(0,t.Lk)("code",null,"null",-1)),s[6]||(s[6]=(0,t.eW)("."))]),(0,t.Lk)("p",null,[(0,t.Lk)("em",null,[s[8]||(s[8]=(0,t.eW)("See also ")),(0,t.bF)(a,{to:"/archive/current/packages/support/misc/isset.html"},{default:(0,t.k6)((()=>s[7]||(s[7]=[(0,t.eW)("misc. "),(0,t.Lk)("code",null,"isset()",-1)]))),_:1}),s[9]||(s[9]=(0,t.eW)("."))])]),s[11]||(s[11]=(0,t.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> isset <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@aedart/support/objects&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1234</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token keyword">null</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span></span>\n<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span></span>\n<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&#39;b.name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>\n<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&#39;b.c&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span></span>\n<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&#39;b.c.age&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can also check if multiple paths are set.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span></span>\n<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&#39;b.c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b.name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>\n<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b.name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b.c.age&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',3))])}]]);const o=JSON.parse('{"path":"/archive/current/packages/support/objects/isset.html","title":"Isset","lang":"en-GB","frontmatter":{"title":"Isset","description":"Determine if object object paths are set and have values.","sidebarDepth":0},"headers":[],"git":{"updatedTime":1709288721000,"contributors":[{"name":"alin","email":"alin@rspsystems.com","commits":1}]},"filePathRelative":"archive/current/packages/support/objects/isset.md","lastUpdatedDateFormat":"yyyy-MM-dd HH:mm:ss ZZZZ","lastUpdatedDateOptions":{}}')}}]);