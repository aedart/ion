"use strict";(self.webpackChunk_aedart_ion_monorepo=self.webpackChunk_aedart_ion_monorepo||[]).push([[2773],{7060:function(e,t,s){s.r(t),s.d(t,{comp:function(){return p},data:function(){return l}});var a=s(641);const n={id:"asserthasprototypeproperty",tabindex:"-1"},r={class:"header-anchor",href:"#asserthasprototypeproperty"},o={};var p=(0,s(6262).A)(o,[["render",function(e,t){const s=(0,a.g2)("Badge"),o=(0,a.g2)("RouteLink");return(0,a.uX)(),(0,a.CE)("div",null,[(0,a.Lk)("h1",n,[(0,a.Lk)("a",r,[(0,a.Lk)("span",null,[t[0]||(t[0]=(0,a.Lk)("code",null,"assertHasPrototypeProperty",-1)),t[1]||(t[1]=(0,a.eW)()),(0,a.bF)(s,{type:"tip",text:"Available since v0.9",vertical:"middle"})])])]),t[5]||(t[5]=(0,a.Lk)("p",null,[(0,a.eW)("Assert that given target object has a "),(0,a.Lk)("code",null,"prototype"),(0,a.eW)(" property defined. Throws a "),(0,a.Lk)("code",null,"TypeError"),(0,a.eW)(" if target object does not have a "),(0,a.Lk)("code",null,"prototype"),(0,a.eW)(" property")],-1)),(0,a.Lk)("p",null,[(0,a.Lk)("em",null,[t[3]||(t[3]=(0,a.eW)("See ")),(0,a.bF)(o,{to:"/archive/current/packages/support/reflections/hasPrototypeProperty.html"},{default:(0,a.k6)((()=>t[2]||(t[2]=[(0,a.Lk)("code",null,"hasPrototypeProperty",-1)]))),_:1}),t[4]||(t[4]=(0,a.eW)(" for details."))])]),t[6]||(t[6]=(0,a.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> assertHasPrototypeProperty <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aedart/support/reflections&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token function">assertHasPrototypeProperty</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">__proto__</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// TypeError</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1))])}]]);const l=JSON.parse('{"path":"/archive/current/packages/support/reflections/assertHasPrototypeProperty.html","title":"Assert Has Prototype Prop.","lang":"en-GB","frontmatter":{"title":"Assert Has Prototype Prop.","description":"Assert that object has a \\"prototype\\" property.","sidebarDepth":0},"headers":[],"git":{"updatedTime":1709548506000,"contributors":[{"name":"alin","email":"alin@rspsystems.com","commits":1}]},"filePathRelative":"archive/current/packages/support/reflections/assertHasPrototypeProperty.md","lastUpdatedDateFormat":"yyyy-MM-dd HH:mm:ss ZZZZ","lastUpdatedDateOptions":{}}')}}]);