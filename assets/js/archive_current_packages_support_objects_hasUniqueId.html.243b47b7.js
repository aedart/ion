"use strict";(self.webpackChunk_aedart_ion_monorepo=self.webpackChunk_aedart_ion_monorepo||[]).push([[3506],{401:function(n,s,a){a.r(s),a.d(s,{comp:function(){return l},data:function(){return o}});var e=a(641);const t={id:"hasuniqueid",tabindex:"-1"},i={class:"header-anchor",href:"#hasuniqueid"},p={};var l=(0,a(6262).A)(p,[["render",function(n,s){const a=(0,e.g2)("Badge"),p=(0,e.g2)("RouteLink");return(0,e.uX)(),(0,e.CE)("div",null,[(0,e.Lk)("h1",t,[(0,e.Lk)("a",i,[(0,e.Lk)("span",null,[s[0]||(s[0]=(0,e.Lk)("code",null,"hasUniqueId",-1)),s[1]||(s[1]=(0,e.eW)()),(0,e.bF)(a,{type:"tip",text:"Available since v0.6",vertical:"middle"})])])]),s[5]||(s[5]=(0,e.Lk)("p",null,"Determine if an object has a unique id.",-1)),(0,e.Lk)("p",null,[(0,e.Lk)("em",null,[s[3]||(s[3]=(0,e.eW)("See ")),(0,e.bF)(p,{to:"/archive/current/packages/support/objects/uniqueId.html"},{default:(0,e.k6)((()=>s[2]||(s[2]=[(0,e.Lk)("code",null,"uniqueId",-1)]))),_:1}),s[4]||(s[4]=(0,e.eW)(" for additional details."))])]),s[6]||(s[6]=(0,e.Fv)('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> hasUniqueId <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@aedart/support/objects&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Ursula&#39;</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">hasUniqueId</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1))])}]]);const o=JSON.parse('{"path":"/archive/current/packages/support/objects/hasUniqueId.html","title":"Has Unique ID","lang":"en-GB","frontmatter":{"title":"Has Unique ID","description":"Determine if object has a unique id.","sidebarDepth":0},"headers":[],"git":{"updatedTime":1709288721000,"contributors":[{"name":"alin","email":"alin@rspsystems.com","commits":1}]},"filePathRelative":"archive/current/packages/support/objects/hasUniqueId.md","lastUpdatedDateFormat":"yyyy-MM-dd HH:mm:ss ZZZZ","lastUpdatedDateOptions":{}}')}}]);