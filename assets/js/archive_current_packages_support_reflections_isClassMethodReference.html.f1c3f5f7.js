"use strict";(self.webpackChunk_aedart_ion_monorepo=self.webpackChunk_aedart_ion_monorepo||[]).push([[774],{7534:function(s,n,a){a.r(n),a.d(n,{comp:function(){return o},data:function(){return l}});var e=a(641);const t={id:"isclassmethodreference",tabindex:"-1"},p={class:"header-anchor",href:"#isclassmethodreference"},c={};var o=(0,a(6262).A)(c,[["render",function(s,n){const a=(0,e.g2)("Badge");return(0,e.uX)(),(0,e.CE)("div",null,[(0,e.Lk)("h1",t,[(0,e.Lk)("a",p,[(0,e.Lk)("span",null,[n[0]||(n[0]=(0,e.Lk)("code",null,"isClassMethodReference",-1)),n[1]||(n[1]=(0,e.eW)()),(0,e.bF)(a,{type:"tip",text:"Available since v0.11",vertical:"middle"})])])]),n[2]||(n[2]=(0,e.Fv)('<p>Determine if value is a &quot;<em>class method reference</em>&quot;. A class method reference is an <code>array</code> with two values:</p><ul><li><code>0 = Constructor | object</code> Target class constructor or class instance</li><li><code>1 = PropertyKey</code> Name of method (<em>property key in target</em>).</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> isClassMethodReference <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aedart/support/reflections&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token punctuation">{</span></span>\n<span class="line">    age <span class="token operator">=</span> <span class="token number">23</span><span class="token punctuation">;</span></span>\n<span class="line">    </span>\n<span class="line">    <span class="token function-variable function">foo</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">/* ...not shown... */</span> <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token function">isClassMethodReference</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token constant">A</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>\n<span class="line"><span class="token function">isClassMethodReference</span><span class="token punctuation">(</span><span class="token punctuation">[</span> instance<span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>\n<span class="line"></span>\n<span class="line"><span class="token function">isClassMethodReference</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token constant">A</span><span class="token punctuation">,</span> <span class="token string">&#39;foo&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span></span>\n<span class="line"><span class="token function">isClassMethodReference</span><span class="token punctuation">(</span><span class="token punctuation">[</span> instance<span class="token punctuation">,</span> <span class="token string">&#39;foo&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',3))])}]]);const l=JSON.parse('{"path":"/archive/current/packages/support/reflections/isClassMethodReference.html","title":"Is Class Method Reference","lang":"en-GB","frontmatter":{"title":"Is Class Method Reference","description":"Determine if value is a class method reference","sidebarDepth":0},"headers":[],"git":{"updatedTime":1710158947000,"contributors":[{"name":"alin","email":"alin@rspsystems.com","commits":1}]},"filePathRelative":"archive/current/packages/support/reflections/isClassMethodReference.md","lastUpdatedDateFormat":"yyyy-MM-dd HH:mm:ss ZZZZ","lastUpdatedDateOptions":{}}')}}]);