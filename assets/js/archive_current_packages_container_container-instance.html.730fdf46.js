"use strict";(self.webpackChunk_aedart_ion_monorepo=self.webpackChunk_aedart_ion_monorepo||[]).push([[4362],{3715:function(n,e,a){a.r(e),a.d(e,{comp:function(){return i},data:function(){return o}});var s=a(641);const t={};var i=(0,a(6262).A)(t,[["render",function(n,e){return(0,s.uX)(),(0,s.CE)("div",null,e[0]||(e[0]=[(0,s.Fv)('<h1 id="container-instance" tabindex="-1"><a class="header-anchor" href="#container-instance"><span>Container Instance</span></a></h1><p>The Service Container can be instantiated like any other regular class. This allows you to use the container in isolation, without application-wide side effects.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Container <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@aedart/container&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> container <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Container</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>However, if you want the use the same Service Container instance across your entire application, then you can obtain a <a href="https://en.wikipedia.org/wiki/Singleton_pattern" target="_blank" rel="noopener noreferrer">singleton</a> instance, via the static method <code>getInstance()</code>.</p><p>The <code>getInstance()</code> method will automatically create a new Service Container instance and store a static reference to it, if no previous instance was created. Otherwise, the method will return the existing instance.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> container <span class="token operator">=</span> Container<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="destroy-existing-instance" tabindex="-1"><a class="header-anchor" href="#destroy-existing-instance"><span>Destroy Existing Instance</span></a></h2><p>In situations when you need to destroy the existing singleton instance, call the static <code>setInstance()</code> method with <code>null</code> as argument.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">Container<span class="token punctuation">.</span><span class="token function">setInstance</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Existing singleton instance is now lost...</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',9)]))}]]);const o=JSON.parse('{"path":"/archive/current/packages/container/container-instance.html","title":"Container Instance","lang":"en-GB","frontmatter":{"description":"How to obtain Service Container instance","sidebarDepth":0},"headers":[{"level":2,"title":"Destroy Existing Instance","slug":"destroy-existing-instance","link":"#destroy-existing-instance","children":[]}],"git":{"updatedTime":1712565858000,"contributors":[{"name":"alin","email":"alin@rspsystems.com","commits":2}]},"filePathRelative":"archive/current/packages/container/container-instance.md","lastUpdatedDateFormat":"yyyy-MM-dd HH:mm:ss ZZZZ","lastUpdatedDateOptions":{}}')}}]);