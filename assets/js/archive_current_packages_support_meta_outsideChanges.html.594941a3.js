"use strict";(self.webpackChunk_aedart_ion_monorepo=self.webpackChunk_aedart_ion_monorepo||[]).push([[4189],{5882:function(n,a,s){s.r(a),s.d(a,{comp:function(){return p},data:function(){return o}});var e=s(641);const t={};var p=(0,s(6262).A)(t,[["render",function(n,a){return(0,e.uX)(),(0,e.CE)("div",null,a[0]||(a[0]=[(0,e.Fv)('<h1 id="changes-outside-the-decorator" tabindex="-1"><a class="header-anchor" href="#changes-outside-the-decorator"><span>Changes outside the decorator</span></a></h1><p>Whenever you read metadata, <strong><em>a copy</em></strong> is returned by the <code>getMeta()</code> method. This means that you can change the data, in your given context, but the original metadata remains the same.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> meta<span class="token punctuation">,</span> getMeta <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aedart/support/meta&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">@<span class="token function">meta</span><span class="token punctuation">(</span><span class="token string">&#39;description&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Search Service&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token string">&#39;Location Sercher&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">Service</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// Obtain &quot;copy&quot; and change it...</span></span>\n<span class="line"><span class="token keyword">let</span> desc <span class="token operator">=</span> <span class="token function">getMeta</span><span class="token punctuation">(</span>Service<span class="token punctuation">,</span> <span class="token string">&#39;description&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">desc<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;Country Searcher&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// Original remains unchanged</span></span>\n<span class="line"><span class="token function">getMeta</span><span class="token punctuation">(</span>Service<span class="token punctuation">,</span> <span class="token string">&#39;description&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span> <span class="token comment">// Search Service</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">Caution</p><p>Only the <code>meta</code> decorator is intended to alter existing metadata - <em>even if the value is an object</em>. Please be mindful of this behaviour, whenever you change retrieved metadata using the <code>getMeta()</code> and <code>getAllMeta()</code> methods.</p></div>',4)]))}]]);const o=JSON.parse('{"path":"/archive/current/packages/support/meta/outsideChanges.html","title":"Outside Changes","lang":"en-GB","frontmatter":{"title":"Outside Changes","description":"About changes to metadata outside decorator scope.","sidebarDepth":0},"headers":[],"git":{"updatedTime":1709288721000,"contributors":[{"name":"alin","email":"alin@rspsystems.com","commits":1}]},"filePathRelative":"archive/current/packages/support/meta/outsideChanges.md","lastUpdatedDateFormat":"yyyy-MM-dd HH:mm:ss ZZZZ","lastUpdatedDateOptions":{}}')}}]);